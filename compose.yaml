services:
    php:
        build:
            context: .
            dockerfile: ./.server/docker/Dockerfile
        volumes:
            - ./:/app
            - ./vendor:/app/vendor
            - ./var:/app/var
        working_dir: /app
        depends_on:
            mysql:
                condition: service_healthy
        networks:
            app-network:
        extra_hosts:
            - "host.docker.internal:host-gateway"
    nginx:
        image: nginx:alpine
        ports:
            - "8084:80"
        volumes:
            - ./:/app
            - ./.server/nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php
        networks:
            app-network:
        extra_hosts:
            - "host.docker.internal:host-gateway"
    mysql:
        image: 'mysql:latest'
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: password
            MYSQL_PASSWORD: secret
            MYSQL_USER: event_tickets_user
            MYSQL_DATABASE: event_tickets
        volumes:
            - database_data:/var/lib/mysql
            - ./.server/mysql/my.cnf:/etc/my.cnf
        ports:
            - "127.0.0.3:3306:3306"
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
            timeout: 5s
            retries: 5
            start_period: 60s
        networks:
            app-network:

networks:
    app-network:
    #driver: bridge

volumes:
    ###> doctrine/doctrine-bundle ###
    database_data:
###< doctrine/doctrine-bundle ###
